import {
  Bar,
  BarChart,
  CartesianGrid,
  Legend,
  Line,
  LineChart,
  ResponsiveContainer,
  Tooltip,
  XAxis,
  YAxis
} from "recharts";
import {useState} from "react";

function ColorHistogram({stats, color, title}) {
  const [isShown, setIsShown] = useState(false);

  return (
    <div style={{width: "100%"}}>
      <header onClick={() => setIsShown(!isShown)}
              style={{display: "flex", justifyContent: "space-between", alignItems: "center"}}>
        <span style={{fontSize: "var(--text-sm)"}}>{title}</span>
        <button style={{
          width: "10px",
          height: '10px',
          color: "black",
          backgroundColor: "transparent",
          border: "none",
          shadow: "none"
        }}>
          {isShown ? (
            <svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M3.75004 1.85816C4.12984 1.73736 4.54604 1.66666 5.00004 1.66666C6.7425 1.66666 7.92837 2.70814 8.6355 3.62679C8.98962 4.08688 9.16671 4.31691 9.16671 4.99999C9.16671 5.68307 8.98962 5.91311 8.6355 6.3732C7.92837 7.29182 6.7425 8.33332 5.00004 8.33332C3.25759 8.33332 2.07169 7.29182 1.36458 6.3732C1.01044 5.91311 0.833374 5.68307 0.833374 4.99999C0.833374 4.31691 1.01044 4.08688 1.36458 3.62679C1.56509 3.3663 1.80409 3.09593 2.08337 2.84223"
                stroke="none" strokeOpacity="0.6" strokeWidth="0.5" strokeLinecap="round"/>
              <path
                d="M6.25 5C6.25 5.69037 5.69037 6.25 5 6.25C4.30962 6.25 3.75 5.69037 3.75 5C3.75 4.30962 4.30962 3.75 5 3.75C5.69037 3.75 6.25 4.30962 6.25 5Z"
                stroke="none" strokeOpacity="0.6" strokeWidth="0.5"/>
            </svg>
          ) : (
            <svg width="10" height="11" viewBox="0 0 10 11" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M1.12057 3.08923C1.05258 2.9306 0.868866 2.85711 0.710233 2.9251C0.5516 2.99308 0.478112 3.1768 0.5461 3.33543L1.12057 3.08923ZM3.76727 6.01971C3.8614 5.87508 3.82043 5.6815 3.67577 5.58737C3.53111 5.49325 3.33753 5.53421 3.2434 5.67887L3.76727 6.01971ZM2.65473 6.58358C2.5606 6.72821 2.60157 6.92179 2.74623 7.01591C2.8909 7.11004 3.08447 7.06908 3.1786 6.92441L2.65473 6.58358ZM9.45392 3.33543C9.52187 3.1768 9.44842 2.99308 9.28975 2.9251C9.13112 2.85711 8.94742 2.9306 8.87942 3.08923L9.45392 3.33543ZM8.32071 5.77866C8.44275 5.90071 8.64058 5.90071 8.76262 5.77866C8.88467 5.65662 8.88467 5.45875 8.76262 5.33671L8.32071 5.77866ZM4.6875 7.17066C4.6875 7.34325 4.82742 7.48316 5 7.48316C5.17258 7.48316 5.3125 7.34325 5.3125 7.17066H4.6875ZM6.82142 6.92441C6.91554 7.06908 7.10912 7.11004 7.25375 7.01591C7.39842 6.92179 7.43937 6.72821 7.34525 6.58358L6.82142 6.92441ZM2.3043 5.15366C2.42634 5.03162 2.42634 4.83375 2.3043 4.71171C2.18227 4.58966 1.9844 4.58966 1.86236 4.71171L2.3043 5.15366ZM1.23736 5.33671C1.11532 5.45875 1.11532 5.65662 1.23736 5.77866C1.3594 5.90071 1.55727 5.90071 1.6793 5.77866L1.23736 5.33671ZM5 5.8165C3.65671 5.8165 2.69222 5.14758 2.05192 4.45802C1.73185 4.11334 1.49719 3.76768 1.34275 3.50822C1.2657 3.37879 1.20911 3.27163 1.17225 3.1979C1.15383 3.16106 1.14037 3.13264 1.13178 3.11404C1.12749 3.10475 1.12441 3.09791 1.12255 3.09372C1.12161 3.09162 1.1209 3.08998 1.12057 3.08923C1.12056 3.08921 1.12058 3.08926 1.12057 3.08923C1.12061 3.08933 1.12057 3.08923 0.833333 3.21233C0.5461 3.33543 0.546037 3.33529 0.5461 3.33543C0.546125 3.33549 0.546308 3.33591 0.546362 3.33604C0.546466 3.33628 0.546596 3.33658 0.546741 3.33691C0.547029 3.33759 0.5474 3.33844 0.547845 3.33946C0.548741 3.34151 0.54995 3.34426 0.55147 3.34768C0.554512 3.35452 0.558812 3.36406 0.564387 3.37613C0.575529 3.40026 0.591775 3.4345 0.613233 3.47741C0.656121 3.56319 0.719975 3.68389 0.805691 3.8279C0.97677 4.11531 1.2369 4.49883 1.59392 4.88329C2.30778 5.65208 3.42662 6.4415 5 6.4415V5.8165ZM6.38021 5.5585C5.97587 5.71766 5.51737 5.8165 5 5.8165V6.4415C5.59925 6.4415 6.13525 6.32658 6.60912 6.14008L6.38021 5.5585ZM3.2434 5.67887L2.65473 6.58358L3.1786 6.92441L3.76727 6.01971L3.2434 5.67887ZM9.16667 3.21233C8.87942 3.08923 8.87937 3.08929 8.87942 3.08923C8.87946 3.08916 8.87962 3.08878 8.87962 3.08883C8.87958 3.08891 8.87946 3.08921 8.87921 3.08973C8.87875 3.09076 8.87792 3.09264 8.87671 3.09535C8.87429 3.10076 8.87037 3.10945 8.86492 3.12118C8.85396 3.14465 8.83692 3.18023 8.81358 3.22594C8.76692 3.31744 8.69542 3.44913 8.59808 3.60533C8.40287 3.91865 8.10679 4.32565 7.70279 4.70483L8.13054 5.16054C8.58429 4.73462 8.91321 4.28144 9.12854 3.93586C9.2365 3.76261 9.31667 3.61516 9.37037 3.50989C9.39721 3.45723 9.4175 3.41501 9.43137 3.38528C9.43829 3.37041 9.44362 3.35866 9.44737 3.35026C9.44925 3.34607 9.45075 3.34271 9.45183 3.34023C9.45237 3.33899 9.45279 3.33797 9.45317 3.33716C9.45333 3.33676 9.45346 3.33642 9.45358 3.33613C9.45367 3.33599 9.45387 3.33555 9.45392 3.33543C9.45392 3.33546 9.45396 3.33537 9.45392 3.33543C9.45396 3.33536 9.45392 3.33543 9.16667 3.21233ZM7.70279 4.70483C7.34487 5.04075 6.90579 5.35162 6.38021 5.5585L6.60912 6.14008C7.22312 5.89841 7.72775 5.53858 8.13054 5.16054L7.70279 4.70483ZM7.69571 5.15366L8.32071 5.77866L8.76262 5.33671L8.13762 4.71171L7.69571 5.15366ZM4.6875 6.129V7.17066H5.3125V6.129H4.6875ZM6.23275 6.01971L6.82142 6.92441L7.34525 6.58358L6.75658 5.67887L6.23275 6.01971ZM1.86236 4.71171L1.23736 5.33671L1.6793 5.77866L2.3043 5.15366L1.86236 4.71171Z"
                fill="#1C274C" fillOpacity="0.6"/>
            </svg>
          )}
        </button>
      </header>
      {isShown && (
        <ResponsiveContainer width="100%" height={200}>
          <LineChart width={600} height={300} data={stats}
                     margin={{top: 5, right: 20, bottom: 5, left: 0}}>
            <Line type="monotone" dataKey="value" stroke={color}/>
            <XAxis dataKey="index"/>
            <Tooltip/>
          </LineChart>
        </ResponsiveContainer>
      )}
    </div>
  );
}

export default ColorHistogram;
